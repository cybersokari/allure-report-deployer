name: Publish to NPM
on:
  workflow_dispatch:
    inputs:
      job:
        description: Package to publish
        required: true
        type: choice
        options:
          - cli
          - shared
        default: cli
      semver:
        description: Bump version
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: patch
      build-docker:
        description: Release new Docker image
        type: boolean
        default: true

jobs:
  deploy-shared:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'shared'}}
    permissions:
      contents: write
    env:
      DIR: apps/shared
    steps:
      - uses: actions/checkout@v4.1.5
        with:
          token: '${{ secrets.PERSONAL_ACCESS_TOKEN }}'
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: npm i --workspace=${{env.DIR}}
      - name: Compile
        run: npm run build --workspace=${{env.DIR}}
      - name: Run test
        run: npm run test --workspace=${{env.DIR}}
      - name: Bump version
        run: cd ${{env.DIR}} && npm version ${{github.event.inputs.semver}}

      - name: NPM Publish
        id: publish
        uses: JS-DevTools/npm-publish@v3.1.1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ${{env.DIR}}
          ignore-scripts: false

      - name: Commit package.json changes
        uses: EndBug/add-and-commit@v9.1.4
        with:
          author_name: Sokari
          author_email: sokariharry@gmail.com
          message: "Release Shared package v${{ steps.publish.outputs.version }}"
          add: '${{ env.DIR }}/*.json'
          push: 'origin main --force'

  deploy-cli:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'cli'}}
    permissions:
      contents: write
    outputs:
      version: ${{steps.version-out.outputs.version}}
    env:
      DIR: apps/cli
    steps:
      - uses: actions/checkout@v4.1.5
        with:
          token: '${{ secrets.PERSONAL_ACCESS_TOKEN }}'
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: npm i --workspaces
      - name: Compile
        run: npm run build --workspaces
      - name: Run test
        run: npm run test --workspaces
      - name: Bump version
        run: cd ${{env.DIR}} && npm version ${{github.event.inputs.semver}}

      - name: NPM Publish
        id: publish
        uses: JS-DevTools/npm-publish@v3.1.1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ${{env.DIR}}
          ignore-scripts: false

      - name: Export version to Docker jobs
        id: version-out
        run: echo "version=${{steps.publish.outputs.version}}" >> $GITHUB_OUTPUT

      - name: Commit package.json changes
        uses: EndBug/add-and-commit@v9.1.4
        with:
          author_name: Sokari
          author_email: sokariharry@gmail.com
          message: "Release CLI package v${{ steps.publish.outputs.version }}"
          add: '${{ env.DIR }}/*.json'
          push: 'origin main --force'

      - name: Create NPM artifact for release
        run: cd ${{env.DIR}} && npm pack
        continue-on-error: true
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1.15.0
        if: success()
        continue-on-error: true
        with:
          artifacts: '${{env.DIR}}/*.tgz'
          tag: 'v${{steps.publish.outputs.version}}'
          name: 'v${{steps.publish.outputs.version}}'
          skipIfReleaseExists: 'true'

  deploy-docker:
    if: ${{ github.event.inputs.job == 'cli' && github.event.inputs.build-docker == 'true' }}
    runs-on: ubuntu-latest
    needs: deploy-cli
    env:
      DIR: apps/docker
    steps:
      - uses: actions/checkout@v4.1.5
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6.10.0
        with:
          context: ${{env.DIR}}
          file: ${{env.DIR}}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: CLI_VERSION=${{needs.deploy-cli.outputs.version}}
          tags: |
            sokari/allure-deployer:latest
            sokari/allure-deployer:${{ github.sha }}
            sokari/allure-deployer:${{needs.deploy-cli.outputs.version}}